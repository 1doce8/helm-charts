
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

updateStrategy: OnDelete

nodeSelector: {}
tolerations: []
affinity: {}

execution:
  image:
    repository: ethereum/client-go
    pullPolicy: IfNotPresent
    tag: "latest"

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  persistence:
    enabled: true
    # storageClass: "-"
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    annotations: {}

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    cluster:
      ports:
        - name: rpc
          port: 8545
          protocol: TCP
        - name: rpc-ws
          port: 8546
          protocol: TCP
        - name: auth-rpc
          port: 8551
          protocol: TCP
    node:
      ports:
        - name: p2p-tcp
          port: 30303
          protocol: TCP
        - name: p2p-udp
          port: 30303
          protocol: UDP

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
        port:
          - 8545
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  command:
  args:
    - --http
    - --http.addr="0.0.0.0"
    - --http.port="8545"
    - --http.compression
    - --http.vhosts="*"
    - --http.corsdomain="*"
    - --http.api="eth,debug,net,trace,txpool,web3,erigon"
    - --ws
    - --ws.compression

  env: []
    # NAME: VALUE
  # This will create a Secret with the specified data
  envFromSecret: []
    # NAME: VALUE
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  livenessProbe:
    httpGet:
      path: /
      port: rpc
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 15
  readinessProbe:
    httpGet:
      path: /
      port: rpc
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 15

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true
